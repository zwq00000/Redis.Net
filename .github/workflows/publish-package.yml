name: publish package

on:
  push:
    branches:
    - develop

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [ '3.1.x']
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}
    - name: Build with dotnet
      run: dotnet build --configuration Release
    - name: Package
      run: |
        subversion=`date +%Y%m%d-%H%m`
        echo $subversion
        dotnet pack src/Redis.Net -o ../../publish/ --include-symbols -c Release -p:PackageVersion=1.0.5-ci-$subversion
        dotnet pack src/Redis.Net.Serializer.NewtonsoftJson -o ../../publish/ --include-symbols -c Release -p:PackageVersion=1.0.5-ci-$subversion
        dotnet pack src/Redis.Net.Serializer.MsgPack -o ../../publish/ --include-symbols -c Release -p:PackageVersion=1.0.5-ci-$subversion
        dotnet pack src/Redis.Net.Serializer.Json -o ../../publish/ --include-symbols -c Release -p:PackageVersion=1.0.5-ci-$subversion
        
    - name: publish nuget
      run: |
        dotnet nuget push /home/runner/work/publish/Redis.Net.*.nupkg -k ${{secrets.nuget_apikey}} -s nuget.org
        dotnet nuget push /home/runner/work/publish/Redis.Net.Serializer.NewtonsoftJson.*.nupkg -k ${{secrets.nuget_apikey}} -s nuget.org
        dotnet nuget push /home/runner/work/publish/Redis.Net.Serializer.MsgPack.*.nupkg -k ${{secrets.nuget_apikey}} -s nuget.org
        dotnet nuget push /home/runner/work/publish/Redis.Net.Serializer.Json.*.nupkg -k ${{secrets.nuget_apikey}} -s nuget.org
